{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\";\nimport { utils, constants } from \"ethers\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport { useContext } from \"react\"; // import { MyContext } from \"../App\";\n\nimport { MyContext } from \"../components/Header2\";\nexport const useGetStakingLevel = () => {\n  _s();\n\n  var _useContractCall;\n\n  const data = useContext(MyContext); // const { chainIdentity, tokenFarmContractAddress } = data\n\n  const {\n    account,\n    chainId\n  } = useEthers();\n  const tokenFarmContractAddress = chainId ? String(chainId) == '42' || String(chainId) == '97' ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero : constants.AddressZero;\n  const dappTokenAddress = chainId ? String(chainId) == '42' || String(chainId) == '97' ? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero : constants.AddressZero;\n  const {\n    abi\n  } = TokenForm; // const tokenFarmContractAddress = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n\n  const tokenFarmInterface = new utils.Interface(abi);\n  const [getStakingLevel] = (_useContractCall = useContractCall({\n    abi: tokenFarmInterface,\n    address: tokenFarmContractAddress,\n    method: \"getStakingLevel\",\n    args: [account, dappTokenAddress]\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return {\n    getStakingLevel\n  };\n};\n\n_s(useGetStakingLevel, \"dxt+aFNYwMKNUPvu6MDPR/fg17k=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/hooks/useGetStakingLevel.tsx"],"names":["useContractCall","useEthers","TokenForm","utils","constants","networkMapping","useContext","MyContext","useGetStakingLevel","data","account","chainId","tokenFarmContractAddress","String","AddressZero","dappTokenAddress","abi","tokenFarmInterface","Interface","getStakingLevel","address","method","args"],"mappings":";;AAAA,SAASA,eAAT,EAA+CC,SAA/C,QAAgE,eAAhE;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,KAAT,EAA2BC,SAA3B,QAA4C,QAA5C;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,UAAT,QAAsC,OAAtC,C,CACA;;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAAA;;AACpC,QAAMC,IAAI,GAAGH,UAAU,CAACC,SAAD,CAAvB,CADoC,CAEpC;;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBV,SAAS,EAAtC;AACA,QAAMW,wBAAwB,GAC1BD,OAAO,GACAE,MAAM,CAACF,OAAD,CAAN,IAAmB,IAApB,IAA8BE,MAAM,CAACF,OAAD,CAAN,IAAmB,IAAlD,GACGN,cAAc,CAACQ,MAAM,CAACF,OAAD,CAAP,CAAd,CAAgC,WAAhC,EAA6C,CAA7C,CADH,GAEGP,SAAS,CAACU,WAHX,GAIHV,SAAS,CAACU,WALlB;AAMA,QAAMC,gBAAgB,GAClBJ,OAAO,GACAE,MAAM,CAACF,OAAD,CAAN,IAAmB,IAApB,IAA8BE,MAAM,CAACF,OAAD,CAAN,IAAmB,IAAlD,GACGN,cAAc,CAACQ,MAAM,CAACF,OAAD,CAAP,CAAd,CAAgC,WAAhC,EAA6C,CAA7C,CADH,GAEGP,SAAS,CAACU,WAHX,GAIHV,SAAS,CAACU,WALlB;AAOA,QAAM;AAAEE,IAAAA;AAAF,MAAUd,SAAhB,CAlBoC,CAmBpC;;AACA,QAAMe,kBAAkB,GAAG,IAAId,KAAK,CAACe,SAAV,CAAoBF,GAApB,CAA3B;AAEA,QAAM,CAACG,eAAD,wBAAoBnB,eAAe,CAAC;AACtCgB,IAAAA,GAAG,EAAEC,kBADiC;AAEtCG,IAAAA,OAAO,EAAER,wBAF6B;AAGtCS,IAAAA,MAAM,EAAE,iBAH8B;AAItCC,IAAAA,IAAI,EAAE,CAACZ,OAAD,EAAUK,gBAAV;AAJgC,GAAD,CAAnC,+DAKA,EALN;AAOA,SAAO;AAAEI,IAAAA;AAAF,GAAP;AACH,CA9BM;;GAAMX,kB;UAIoBP,S,EAkBHD,e","sourcesContent":["import { useContractCall, useContractFunction, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\"\nimport { utils, BigNumber, constants } from \"ethers\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { useContext, useEffect } from \"react\";\n// import { MyContext } from \"../App\";\nimport { MyContext } from \"../components/Header2\";\n\n\nexport const useGetStakingLevel = () => {\n    const data = useContext(MyContext)\n    // const { chainIdentity, tokenFarmContractAddress } = data\n\n    const { account, chainId } = useEthers()\n    const tokenFarmContractAddress = (\n        chainId ?\n            (((String(chainId) == '42') || (String(chainId) == '97')) ?\n                networkMapping[String(chainId)][\"TokenFarm\"][0] :\n                constants.AddressZero) :\n            constants.AddressZero)\n    const dappTokenAddress = (\n        chainId ?\n            (((String(chainId) == '42') || (String(chainId) == '97')) ?\n                networkMapping[String(chainId)][\"DappToken\"][0] :\n                constants.AddressZero) :\n            constants.AddressZero)\n\n    const { abi } = TokenForm\n    // const tokenFarmContractAddress = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n    const tokenFarmInterface = new utils.Interface(abi)\n\n    const [getStakingLevel] = useContractCall({\n        abi: tokenFarmInterface,\n        address: tokenFarmContractAddress,\n        method: \"getStakingLevel\",\n        args: [account, dappTokenAddress]\n    }) ?? []\n\n    return { getStakingLevel }\n}"]},"metadata":{},"sourceType":"module"}