{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/project/ParticipateButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParticipationButton } from '../../hooks/useParticipateButton';\nimport { useNotifications } from \"@usedapp/core\";\nimport { CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ParticipateButton = _ref => {\n  _s();\n\n  let {\n    preSaleNumber\n  } = _ref;\n  const {\n    participateInPreSaleAllocationSendFunction,\n    participateInPreSaleAllocationState: participateState\n  } = useParticipationButton();\n\n  const handleParticipationButton = () => {\n    return participateInPreSaleAllocationSendFunction(preSaleNumber);\n  };\n\n  const isParticipating = participateState.status === \"Mining\";\n  const [showParticipationSuccess, setParticipationSuccess] = useState(false);\n  const {\n    notifications\n  } = useNotifications();\n  useEffect(() => {\n    if (notifications.filter(notification => notification.type === \"transactionSucceed\" && notification.transactionName === \"Participating in PreSale Allocation\").length > 0) {\n      setParticipationSuccess(true);\n    }\n  }, [notifications, participateState]);\n\n  const handleCloseSnack = () => {\n    setParticipationSuccess(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participate\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phase: 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Click the Following Button To Participate in this Pre-Sale.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"And the system will take your entery and You won't be able to unstake your tokens for the next 2 Weeks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleParticipationButton,\n        className: \"btn btn-shadow\",\n        children: isParticipating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 26\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this) : \"Commit to Participate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showParticipationSuccess,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"Thanks for Commiting to Participate, Now please wait for the Allocation and Pre-Sale Purchase to Open!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ParticipateButton, \"w93yHbA79PkTYVTOy6lvd8S2mRA=\", false, function () {\n  return [useParticipationButton, useNotifications];\n});\n\n_c = ParticipateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticipateButton\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/project/ParticipateButton.tsx"],"names":["React","useEffect","useState","useParticipationButton","useNotifications","CircularProgress","Snackbar","Alert","ParticipateButton","preSaleNumber","participateInPreSaleAllocationSendFunction","participateInPreSaleAllocationState","participateState","handleParticipationButton","isParticipating","status","showParticipationSuccess","setParticipationSuccess","notifications","filter","notification","type","transactionName","length","handleCloseSnack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAA6BC,gBAA7B,EAA+CC,QAA/C,QAA+D,mBAA/D;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAMA,OAAO,MAAMC,iBAAiB,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA;AAAF,GAA6B;AAC3D,QAAM;AAAEC,IAAAA,0CAAF;AAA8CC,IAAAA,mCAAmC,EAAEC;AAAnF,MAAwGT,sBAAsB,EAApI;;AAEA,QAAMU,yBAAyB,GAAG,MAAM;AACpC,WAAOH,0CAA0C,CAACD,aAAD,CAAjD;AACH,GAFD;;AAKA,QAAMK,eAAe,GAAGF,gBAAgB,CAACG,MAAjB,KAA4B,QAApD;AACA,QAAM,CAACC,wBAAD,EAA2BC,uBAA3B,IAAsDf,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAoBd,gBAAgB,EAA1C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,aAAa,CAACC,MAAd,CAAsBC,YAAD,IACrBA,YAAY,CAACC,IAAb,KAAsB,oBAAtB,IACAD,YAAY,CAACE,eAAb,KAAiC,qCAFjC,EAGFC,MAHE,GAGO,CAHX,EAGc;AACVN,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;AACJ,GAPQ,EAON,CAACC,aAAD,EAAgBN,gBAAhB,CAPM,CAAT;;AASA,QAAMY,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEJ,yBAAjB;AAA4C,QAAA,SAAS,EAAC,gBAAtD;AAAA,kBACMC,eAAD,gBAAoB,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAApB,GAAqD;AAD1D;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEE,wBAAhB;AACI,MAAA,gBAAgB,EAAE,IADtB;AAEI,MAAA,OAAO,EAAEQ,gBAFb;AAAA,6BAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,gBAAhB;AAAkC,QAAA,QAAQ,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAmBH,CA5CM;;GAAMhB,iB;UACqGL,sB,EASpFC,gB;;;KAVjBI,iB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParticipationButton } from '../../hooks/useParticipateButton'\nimport { useNotifications } from \"@usedapp/core\"\nimport { Button, makeStyles, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\n\ninterface Props {\n    preSaleNumber: string\n}\n\nexport const ParticipateButton = ({ preSaleNumber }: Props) => {\n    const { participateInPreSaleAllocationSendFunction, participateInPreSaleAllocationState: participateState } = useParticipationButton()\n\n    const handleParticipationButton = () => {\n        return participateInPreSaleAllocationSendFunction(preSaleNumber)\n    }\n\n\n    const isParticipating = participateState.status === \"Mining\"\n    const [showParticipationSuccess, setParticipationSuccess] = useState(false)\n    const { notifications } = useNotifications()\n\n    useEffect(() => {\n        if (notifications.filter((notification) =>\n            notification.type === \"transactionSucceed\" &&\n            notification.transactionName === \"Participating in PreSale Allocation\"\n        ).length > 0) {\n            setParticipationSuccess(true)\n        }\n    }, [notifications, participateState])\n\n    const handleCloseSnack = () => {\n        setParticipationSuccess(false)\n    }\n\n    return (\n        <>\n            <div className='participate'>\n                <h1>Phase: 1</h1>\n                <h3>Click the Following Button To Participate in this Pre-Sale.</h3>\n                <h3>And the system will take your entery and You won't be able to unstake your tokens for the next 2 Weeks.</h3>\n                <button onClick={handleParticipationButton} className='btn btn-shadow'>\n                    {(isParticipating) ? <CircularProgress size={26} /> : \"Commit to Participate!\"}\n                </button>\n            </div>\n            <Snackbar open={showParticipationSuccess}\n                autoHideDuration={5000}\n                onClose={handleCloseSnack} >\n                <Alert onClose={handleCloseSnack} severity=\"success\" >\n                    Thanks for Commiting to Participate, Now please wait for the Allocation and Pre-Sale Purchase to Open!\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}