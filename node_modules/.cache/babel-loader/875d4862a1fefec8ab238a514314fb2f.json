{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/CompleteGridPurchasedPreSaleBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useNotifications } from \"@usedapp/core\";\nimport { usePurchasedBalance } from \"../../hooks/usePurchasedBalance\";\nimport { useAvailableToClaim } from \"../../hooks/useAvailableToClaim\";\nimport { useClaimPreSaleTokens } from \"../../hooks/useClaimPreSaleTokens\"; // import { Token } from \"../Main\"\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport { makeStyles, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useState, useEffect } from \"react\";\nimport { useGetStakingLevel } from \"../../hooks/useGetStakingLevel\"; // import { ThemeProvider } from '@material-ui/core/styles';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n      margin: 10,\n      overflowWrap: \"break-word\"\n    },\n    h3: {\n      margin: 5,\n      fontSize: 20,\n      overflow: \"hidden\"\n    },\n    span: {\n      fontSize: 20\n    }\n  };\n});\n_c = Item;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"inline-grid\",\n    gridTemplateColumns: \"auto auto auto\",\n    gap: theme.spacing(1),\n    alignItems: \"center\"\n  },\n  tokenImg: {\n    width: \"32px\"\n  },\n  amount: {\n    fontWeight: 700\n  },\n  bold: {\n    fontWeight: 900\n  }\n}));\nexport const CompleteGridPurchasedPreSaleBalance = _ref2 => {\n  _s();\n\n  let {\n    tokenAddress\n  } = _ref2;\n  const dAppTokenAddress = tokenAddress;\n  const classes = useStyles();\n  const {\n    account\n  } = useEthers();\n  const {\n    send: claimTokens,\n    state: claimPreSaleTokensState\n  } = useClaimPreSaleTokens();\n  const purchasedTokenBalance = usePurchasedBalance(tokenAddress);\n  const FPurchasedTokenBalance = purchasedTokenBalance ? parseFloat(formatUnits(purchasedTokenBalance, 18)) : 0;\n  const {\n    availableToClaim,\n    totalClaimed\n  } = useAvailableToClaim(tokenAddress);\n  const fAvailableToClaim = availableToClaim ? parseFloat(formatUnits(availableToClaim, 18)) : 0;\n  const fTotalClaimed = totalClaimed ? parseFloat(formatUnits(totalClaimed, 18)) : 0;\n  console.log(\"totalClaimed: \" + fTotalClaimed);\n\n  const handleClaimTokens = () => {\n    return claimTokens();\n  };\n\n  const isClaiming = claimPreSaleTokensState.status === \"Mining\";\n  const [showClaimingSuccess, setClaimingSuccess] = useState(false);\n  const {\n    notifications\n  } = useNotifications();\n  const {\n    getStakingLevel\n  } = useGetStakingLevel();\n  const fStakingLevel = getStakingLevel ? parseFloat(getStakingLevel) : 0;\n  useEffect(() => {\n    if (notifications.filter(notification => notification.type === \"transactionSucceed\" && notification.transactionName === \"Claiming Pre Sale Tokens\").length > 0) {\n      console.log(\"Tokens Claimed!\");\n      setClaimingSuccess(true);\n    }\n  }, [notifications, claimPreSaleTokensState]);\n\n  const handleCloseSnack = () => {\n    setClaimingSuccess(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          marginTop: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              sx: {\n                backgroundColor: '#B9B8B8'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Total Tokens Purchased\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: FPurchasedTokenBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"section-heading\",\n              children: \" Claim Pre-Sale Tokens...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              marginTop: 0,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Item, {\n                  sx: {\n                    backgroundColor: '#B9B8B8'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \" Available to Claim\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: fAvailableToClaim\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Item, {\n                  sx: {\n                    backgroundColor: '#B9B8B8'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \" Total Claimed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: fTotalClaimed\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  sx: {\n                    backgroundColor: '#B9B8B8'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-shadow\",\n                      onClick: handleClaimTokens,\n                      children: isClaiming ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                        size: 26\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 65\n                      }, this) : \"Claim Tokens!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showClaimingSuccess,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"PreSale Tokens Claimed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CompleteGridPurchasedPreSaleBalance, \"u9hVAUrrU5MK9n9E0SOKNv3xM7U=\", false, function () {\n  return [useStyles, useEthers, useClaimPreSaleTokens, usePurchasedBalance, useAvailableToClaim, useNotifications, useGetStakingLevel];\n});\n\n_c2 = CompleteGridPurchasedPreSaleBalance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"CompleteGridPurchasedPreSaleBalance\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/CompleteGridPurchasedPreSaleBalance.tsx"],"names":["useEthers","useNotifications","usePurchasedBalance","useAvailableToClaim","useClaimPreSaleTokens","formatUnits","makeStyles","CircularProgress","Snackbar","styled","Box","Paper","Grid","Typography","Alert","useState","useEffect","useGetStakingLevel","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","h2","margin","overflowWrap","h3","fontSize","overflow","span","useStyles","container","display","gridTemplateColumns","gap","alignItems","tokenImg","width","amount","fontWeight","bold","CompleteGridPurchasedPreSaleBalance","tokenAddress","dAppTokenAddress","classes","account","send","claimTokens","state","claimPreSaleTokensState","purchasedTokenBalance","FPurchasedTokenBalance","parseFloat","availableToClaim","totalClaimed","fAvailableToClaim","fTotalClaimed","console","log","handleClaimTokens","isClaiming","status","showClaimingSuccess","setClaimingSuccess","notifications","getStakingLevel","fStakingLevel","filter","notification","type","transactionName","length","handleCloseSnack","flexGrow"],"mappings":"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","sourcesContent":["import { useEthers, useTokenBalance, useEtherBalance, useNotifications } from \"@usedapp/core\"\nimport { usePurchasedBalance } from \"../../hooks/usePurchasedBalance\"\nimport { useAvailableToClaim } from \"../../hooks/useAvailableToClaim\"\nimport { useClaimPreSaleTokens } from \"../../hooks/useClaimPreSaleTokens\"\n// import { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\"\n\nimport { Button, makeStyles, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { useState, useEffect } from \"react\"\nimport { ftruncate } from \"fs\"\nimport { useGetStakingLevel } from \"../../hooks/useGetStakingLevel\"\n\n// import { ThemeProvider } from '@material-ui/core/styles';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n        margin: 10,\n        overflowWrap: \"break-word\",\n    },\n    h3: {\n        margin: 5,\n        fontSize: 20,\n        overflow: \"hidden\",\n\n    },\n    span: {\n        fontSize: 20\n    }\n}));\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: \"inline-grid\",\n        gridTemplateColumns: \"auto auto auto\",\n        gap: theme.spacing(1),\n        alignItems: \"center\",\n    },\n    tokenImg: {\n        width: \"32px\"\n    },\n    amount: {\n        fontWeight: 700\n    },\n    bold: {\n        fontWeight: 900,\n    }\n}))\n\n\ninterface BalanceMsgProps {\n    tokenAddress: string\n}\n\n\nexport const CompleteGridPurchasedPreSaleBalance = ({ tokenAddress }: BalanceMsgProps) => {\n\n    const dAppTokenAddress = tokenAddress\n    const classes = useStyles()\n    const { account } = useEthers()\n\n    const { send: claimTokens, state: claimPreSaleTokensState } = useClaimPreSaleTokens()\n\n    const purchasedTokenBalance = usePurchasedBalance(tokenAddress)\n    const FPurchasedTokenBalance: number = purchasedTokenBalance ? parseFloat(formatUnits(purchasedTokenBalance, 18)) : 0\n\n    const { availableToClaim, totalClaimed } = useAvailableToClaim(tokenAddress)\n    const fAvailableToClaim: number = availableToClaim ? parseFloat(formatUnits(availableToClaim, 18)) : 0\n    const fTotalClaimed: number = totalClaimed ? parseFloat(formatUnits(totalClaimed, 18)) : 0\n    console.log(\"totalClaimed: \" + fTotalClaimed)\n\n    const handleClaimTokens = () => { return claimTokens() }\n\n    const isClaiming = claimPreSaleTokensState.status === \"Mining\"\n    const [showClaimingSuccess, setClaimingSuccess] = useState(false)\n    const { notifications } = useNotifications()\n\n    const { getStakingLevel } = useGetStakingLevel()\n    const fStakingLevel: number = getStakingLevel ? parseFloat(getStakingLevel) : 0\n\n    useEffect(() => {\n        if (notifications.filter((notification) =>\n            notification.type === \"transactionSucceed\" &&\n            notification.transactionName === \"Claiming Pre Sale Tokens\"\n        ).length > 0) {\n            console.log(\"Tokens Claimed!\")\n            setClaimingSuccess(true)\n        }\n    }, [notifications, claimPreSaleTokensState])\n\n    const handleCloseSnack = () => {\n        setClaimingSuccess(false)\n    }\n\n    return (\n        <>\n            <Box >\n                <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2} marginTop={1}>\n                        <Grid item xs={12} md={12}>\n                            <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                <h2>Total Tokens Purchased</h2>\n                            </Item>\n                            <Item>\n                                <h3>\n                                    {FPurchasedTokenBalance}\n                                </h3>\n                            </Item>\n                        </Grid>\n                        <div >\n\n                        </div>\n\n                        <Grid item xs={12} md={12}>\n                            <h1 className=\"section-heading\"> Claim Pre-Sale Tokens...</h1>\n\n                            {/* <Item sx={{ backgroundColor: 'black', color: 'white', opacity: '0.5' }}>\n                            <h2>Withdraw Pre Sale Tokens</h2>\n                        </Item> */}\n                            {/* <Item> */}\n\n\n                            <Grid container spacing={1} marginTop={0}>\n\n                                <Grid item xs={12} md={6}>\n                                    <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                        <h2> Available to Claim</h2>\n                                    </Item>\n                                    <Item>\n                                        <h3>{fAvailableToClaim}</h3>\n                                    </Item>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                        <h2> Total Claimed</h2>\n                                    </Item>\n                                    <Item>\n                                        <h3>{fTotalClaimed}</h3>\n                                    </Item>\n                                </Grid>\n                                <Grid item xs={12} md={12}>\n                                    <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                        <Typography variant=\"h6\">\n                                            <button className='btn btn-shadow' onClick={handleClaimTokens}>\n                                                {(isClaiming) ? <CircularProgress size={26} /> : \"Claim Tokens!\"}\n                                            </button>\n                                        </Typography>\n                                    </Item>\n\n                                </Grid>\n                            </Grid>\n                            {/* </Item> */}\n\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box >\n            <Snackbar open={showClaimingSuccess}\n                autoHideDuration={5000}\n                onClose={handleCloseSnack} >\n                <Alert onClose={handleCloseSnack} severity=\"success\" >\n                    PreSale Tokens Claimed!\n                </Alert>\n            </Snackbar>\n        </>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}