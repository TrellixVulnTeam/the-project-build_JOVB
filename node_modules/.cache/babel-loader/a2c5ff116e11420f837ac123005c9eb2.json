{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/UnStakeYourWallet.tsx\",\n    _s = $RefreshSig$();\n\nimport Box from '@mui/material/Box';\nimport React, { useState } from \"react\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Tab } from \"@material-ui/core\";\nimport { WalletBalance } from \"./WalletBalance\";\nimport { UnStakeForm } from \"./UnStakeForm\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useEthers } from \"@usedapp/core\";\nimport { GridTotalStaking } from \"./GridTotalStaking\";\nimport { useContext } from \"react\"; // import { MyContext } from \"../../App\";\n\nimport { MyContext } from \"../Header2\";\nimport { GridStakingUnstaking } from \"./GridStakingUnstaking\";\nimport { GridClaimRewards } from \"./GridClaimRewards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tabContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(4)\n  },\n  box: {\n    backgroundColor: \"white\",\n    borderRadius: \"25px\",\n    opacity: \"0.95\"\n  },\n  header: {\n    color: \"white\"\n  }\n}));\nexport const UnStakeYourWallet = _ref => {\n  _s();\n\n  let {\n    supportedTokens\n  } = _ref;\n  const {\n    dappTokenAddress\n  } = useContext(MyContext);\n  const {\n    account\n  } = useEthers();\n  const isConnected = account !== undefined;\n  const [selectedTokenIndex, setSelectedTokenIndex] = useState(0);\n  const [number, setNumber] = useState(0);\n\n  const changeNumber = () => {\n    setNumber(number + 1);\n  };\n\n  const handleChange = (event, newValue) => {\n    setSelectedTokenIndex(parseInt(newValue));\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-heading\",\n        children: \"UnStake! Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridTotalStaking, {\n        tokenAddress: dappTokenAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridStakingUnstaking, {\n        tokenAddress: dappTokenAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridClaimRewards, {\n        tokenAddress: dappTokenAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), isConnected ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.box,\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: selectedTokenIndex.toString(),\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            onChange: handleChange,\n            \"aria-label\": \"stake form tabs\",\n            children: supportedTokens.map((token, index) => {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: token.name,\n                value: index.toString()\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), supportedTokens.map((token, index) => {\n            return /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: index.toString(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tabContent,\n                children: [/*#__PURE__*/_jsxDEV(WalletBalance, {\n                  token: supportedTokens[selectedTokenIndex]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(UnStakeForm, {\n                  token: supportedTokens[selectedTokenIndex]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-heading\",\n      children: \" Connect to Wallet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UnStakeYourWallet, \"iy0+hW1FQzFr/aXLsc87GvyP8nw=\", false, function () {\n  return [useEthers, useStyles];\n});\n\n_c = UnStakeYourWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnStakeYourWallet\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/UnStakeYourWallet.tsx"],"names":["Box","React","useState","TabContext","TabList","TabPanel","Tab","WalletBalance","UnStakeForm","makeStyles","useEthers","GridTotalStaking","useContext","MyContext","GridStakingUnstaking","GridClaimRewards","useStyles","theme","tabContent","display","flexDirection","alignItems","gap","spacing","box","backgroundColor","borderRadius","opacity","header","color","UnStakeYourWallet","supportedTokens","dappTokenAddress","account","isConnected","undefined","selectedTokenIndex","setSelectedTokenIndex","number","setNumber","changeNumber","handleChange","event","newValue","parseInt","classes","mt","toString","map","token","index","name"],"mappings":"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","sourcesContent":["import { Token } from \"../Main\"\nimport Box from '@mui/material/Box';\nimport React, { useState } from \"react\"\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\nimport { tokenToString } from \"typescript\";\nimport { Button, Tab } from \"@material-ui/core\"\nimport { WalletBalance } from \"./WalletBalance\";\nimport { UnStakeForm } from \"./UnStakeForm\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { CheckpointsPreSale } from \"../CheckpointsPreSale\";\nimport { useEthers } from \"@usedapp/core\";\n\nimport { GridTotalStaking } from \"./GridTotalStaking\";\nimport { useContext } from \"react\";\n// import { MyContext } from \"../../App\";\nimport { MyContext } from \"../Header2\";\n\nimport { GridStakingUnstaking } from \"./GridStakingUnstaking\";\nimport { GridClaimRewards } from \"./GridClaimRewards\"\n\nconst useStyles = makeStyles((theme) => ({\n    tabContent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: theme.spacing(4)\n    },\n    box: {\n        backgroundColor: \"white\",\n        borderRadius: \"25px\",\n        opacity: \"0.95\",\n    },\n    header: {\n        color: \"white\"\n    }\n}))\n\ninterface YourWalletProps {\n    supportedTokens: Array<Token>\n}\n\n\nexport const UnStakeYourWallet = ({ supportedTokens }: YourWalletProps) => {\n    const { dappTokenAddress } = useContext(MyContext)\n\n    const { account } = useEthers()\n    const isConnected = account !== undefined\n\n\n    const [selectedTokenIndex, setSelectedTokenIndex] = useState<number>(0)\n\n    const [number, setNumber] = useState<number>(0)\n\n    const changeNumber = () => {\n        setNumber(number + 1)\n    }\n\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setSelectedTokenIndex(parseInt(newValue))\n    }\n    const classes = useStyles()\n    return (\n        <>\n            <div>\n                <h1 className=\"section-heading\">UnStake! Tokens</h1>\n                <GridTotalStaking tokenAddress={dappTokenAddress} />\n                <GridStakingUnstaking tokenAddress={dappTokenAddress} />\n                <GridClaimRewards tokenAddress={dappTokenAddress} />\n            </div>\n            {(isConnected) ?\n                (\n                    <Box sx={{ mt: 4 }}>\n                        {/* {(number < 25) ? (<Button onClick={(() => setNumber(number + 2))}>Less {number}</Button>) : (number >= 25 && number <= 30)\n                ? (<Button onClick={changeNumber}>greater {number}</Button>) : (<Button onClick={changeNumber}>greatest {number}</Button>)}\n            <Button onClick={changeNumber}>Click Here {number}</Button> */}\n                        {/* <CheckpointsPreSale /> */}\n\n                        <Box className={classes.box}>\n                            <TabContext value={selectedTokenIndex.toString()} >\n                                <TabList onChange={handleChange} aria-label=\"stake form tabs\">\n                                    {supportedTokens.map((token, index) => {\n\n                                        return (\n                                            <Tab label={token.name}\n                                                value={index.toString()}\n                                                key={index}>\n\n                                            </Tab>\n                                        )\n                                    })}\n                                </TabList>\n                                {supportedTokens.map((token, index) => {\n                                    return (\n                                        <TabPanel value={index.toString()} key={index}>\n                                            <div className={classes.tabContent}>\n                                                <WalletBalance token={supportedTokens[selectedTokenIndex]} />\n                                                <UnStakeForm token={supportedTokens[selectedTokenIndex]} />\n                                            </div>\n                                        </TabPanel>\n                                    )\n                                })}\n\n                            </TabContext>\n                        </Box>\n                    </Box>\n                ) : (\n                    <h1 className=\"section-heading\"> Connect to Wallet...</h1>\n                )}\n        </>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}