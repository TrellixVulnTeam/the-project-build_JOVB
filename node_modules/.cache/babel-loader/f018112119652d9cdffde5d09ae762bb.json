{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\";\nimport { utils } from \"ethers\";\nimport { useContext } from \"react\"; // import { MyContext } from \"../App\";\n\nimport { MyContext } from \"../components/Header2\";\nexport const useStakingRewards = address => {\n  _s();\n\n  var _useContractCall;\n\n  const {\n    account,\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = TokenForm;\n  const data = useContext(MyContext);\n  const {\n    chainIdentity,\n    tokenFarmContractAddress\n  } = data; // const tokenFarmContractAddress = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n\n  const tokenFarmInterface = new utils.Interface(abi);\n  const [stakingRewards] = (_useContractCall = useContractCall({\n    abi: tokenFarmInterface,\n    address: tokenFarmContractAddress,\n    method: \"getAvailableStakingRewards\",\n    args: [account, address]\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  return stakingRewards;\n};\n\n_s(useStakingRewards, \"lqwsfMSb4/fmQxCdEVG4CCOir0k=\", false, function () {\n  return [useEthers, useContractCall];\n});","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/hooks/useStakingRewards.tsx"],"names":["useContractCall","useEthers","TokenForm","utils","useContext","MyContext","useStakingRewards","address","account","chainId","abi","data","chainIdentity","tokenFarmContractAddress","tokenFarmInterface","Interface","stakingRewards","method","args"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,KAAT,QAA4C,QAA5C;AAEA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,IAA4C;AAAA;;AAAA;;AACzE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBR,SAAS,EAAtC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAUR,SAAhB;AAGA,QAAMS,IAAI,GAAGP,UAAU,CAACC,SAAD,CAAvB;AACA,QAAM;AAAEO,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA8CF,IAApD,CANyE,CAQzE;;AAEA,QAAMG,kBAAkB,GAAG,IAAIX,KAAK,CAACY,SAAV,CAAoBL,GAApB,CAA3B;AAEA,QAAM,CAACM,cAAD,wBAAmBhB,eAAe,CAAC;AACrCU,IAAAA,GAAG,EAAEI,kBADgC;AAErCP,IAAAA,OAAO,EAAEM,wBAF4B;AAGrCI,IAAAA,MAAM,EAAE,4BAH6B;AAIrCC,IAAAA,IAAI,EAAE,CAACV,OAAD,EAAUD,OAAV;AAJ+B,GAAD,CAAlC,+DAKA,EALN;AAQA,SAAOS,cAAP;AACH,CArBM;;GAAMV,iB;UACoBL,S,EAWJD,e","sourcesContent":["import { useContractCall, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\"\nimport { utils, BigNumber, constants } from \"ethers\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { useContext } from \"react\"\n// import { MyContext } from \"../App\";\nimport { MyContext } from \"../components/Header2\";\n\n\nexport const useStakingRewards = (address: string): BigNumber | undefined => {\n    const { account, chainId } = useEthers()\n    const { abi } = TokenForm\n\n\n    const data = useContext(MyContext)\n    const { chainIdentity, tokenFarmContractAddress } = data\n\n    // const tokenFarmContractAddress = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n\n    const tokenFarmInterface = new utils.Interface(abi)\n\n    const [stakingRewards] = useContractCall({\n        abi: tokenFarmInterface,\n        address: tokenFarmContractAddress,\n        method: \"getAvailableStakingRewards\",\n        args: [account, address]\n    }) ?? []\n\n\n    return stakingRewards\n}"]},"metadata":{},"sourceType":"module"}