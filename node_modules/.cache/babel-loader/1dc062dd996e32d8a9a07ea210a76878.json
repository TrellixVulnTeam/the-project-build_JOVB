{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridTotalStaking.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers } from \"@usedapp/core\";\nimport { useStakingBalance } from \"../../hooks/useStakingBalance\"; // import { usePurchasedBalance } from \"../../hooks/usePurchasedBalance\"\n// import { Token } from \"../Main\"\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n      margin: 10,\n      overflowWrap: \"break-word\"\n    },\n    h3: {\n      margin: 5,\n      fontSize: 20,\n      overflow: \"hidden\"\n    },\n    span: {\n      fontSize: 20\n    }\n  };\n});\n_c = Item;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"inline-grid\",\n    gridTemplateColumns: \"auto auto auto\",\n    gap: theme.spacing(1),\n    alignItems: \"center\"\n  },\n  tokenImg: {\n    width: \"32px\"\n  },\n  amount: {\n    fontWeight: 700\n  },\n  bold: {\n    fontWeight: 900\n  }\n}));\nexport const GridTotalStaking = _ref2 => {\n  _s();\n\n  let {\n    tokenAddress\n  } = _ref2;\n  const dAppTokenAddress = tokenAddress;\n  const classes = useStyles();\n  const {\n    account\n  } = useEthers();\n  const {\n    totalNumberOfStakers,\n    totalTokensStaked\n  } = useStakingBalance(tokenAddress);\n  const fTotalNumberOfStakers = totalNumberOfStakers ? parseFloat(totalNumberOfStakers) : 0;\n  const fTotalTokensStaked = totalTokensStaked ? parseFloat(formatUnits(totalTokensStaked, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            display: {\n              xs: 'block',\n              sm: 'block'\n            }\n          },\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#6b6e70'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Number of Stakers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: fTotalNumberOfStakers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#6b6e70'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Total $Moon Staked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: fTotalTokensStaked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#6b6e70'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"APY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GridTotalStaking, \"fnqU/HNSAeRBtqb2SjxIw+k2vv8=\", false, function () {\n  return [useStyles, useEthers, useStakingBalance];\n});\n\n_c2 = GridTotalStaking;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"GridTotalStaking\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridTotalStaking.tsx"],"names":["useEthers","useStakingBalance","formatUnits","makeStyles","styled","Box","Paper","Grid","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","h2","margin","overflowWrap","h3","fontSize","overflow","span","useStyles","container","display","gridTemplateColumns","gap","alignItems","tokenImg","width","amount","fontWeight","bold","GridTotalStaking","tokenAddress","dAppTokenAddress","classes","account","totalNumberOfStakers","totalTokensStaked","fTotalNumberOfStakers","parseFloat","fTotalTokensStaked","flexGrow","xs","sm"],"mappings":"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","sourcesContent":["import { useEthers, useTokenBalance, useEtherBalance } from \"@usedapp/core\"\nimport { useStakingBalance } from \"../../hooks/useStakingBalance\"\n// import { usePurchasedBalance } from \"../../hooks/usePurchasedBalance\"\n// import { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\"\n\nimport { makeStyles } from \"@material-ui/core\"\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\"\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n        margin: 10,\n        overflowWrap: \"break-word\",\n    },\n    h3: {\n        margin: 5,\n        fontSize: 20,\n        overflow: \"hidden\",\n\n    },\n    span: {\n        fontSize: 20\n    }\n}));\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: \"inline-grid\",\n        gridTemplateColumns: \"auto auto auto\",\n        gap: theme.spacing(1),\n        alignItems: \"center\",\n    },\n    tokenImg: {\n        width: \"32px\"\n    },\n    amount: {\n        fontWeight: 700\n    },\n    bold: {\n        fontWeight: 900,\n    }\n}))\n\n\ninterface BalanceMsgProps {\n    tokenAddress: string\n}\n\n\nexport const GridTotalStaking = ({ tokenAddress }: BalanceMsgProps) => {\n\n    const dAppTokenAddress = tokenAddress\n    const classes = useStyles()\n    const { account } = useEthers()\n    const { totalNumberOfStakers, totalTokensStaked } = useStakingBalance(tokenAddress)\n    const fTotalNumberOfStakers: number = totalNumberOfStakers ? parseFloat(totalNumberOfStakers) : 0\n    const fTotalTokensStaked: number = totalTokensStaked ? parseFloat(formatUnits(totalTokensStaked, 18)) : 0\n\n\n    return (\n        <Box >\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid container spacing={2} >\n                    <Grid item xs={12}\n                        sx={{ display: { xs: 'block', sm: 'block' }, }}\n                        md={12}>\n                        <Item sx={{ backgroundColor: '#6b6e70' }}>\n                            <h2> Number of Stakers</h2>\n                        </Item>\n                        <Item >\n                            <h3>{fTotalNumberOfStakers}</h3>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                        <Item sx={{ backgroundColor: '#6b6e70' }}>\n                            <h2>Total $Moon Staked</h2>\n                        </Item>\n                        <Item>\n                            <h3>{fTotalTokensStaked}</h3>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                        <Item sx={{ backgroundColor: '#6b6e70' }}>\n                            <h2>APY</h2>\n                        </Item>\n                        <Item>\n                            {/* 15% */}\n                            <h3 >\n                                10%\n                            </h3>\n                        </Item>\n                    </Grid>\n                </Grid>\n\n            </Box>\n        </Box >\n\n    )\n}"]},"metadata":{},"sourceType":"module"}