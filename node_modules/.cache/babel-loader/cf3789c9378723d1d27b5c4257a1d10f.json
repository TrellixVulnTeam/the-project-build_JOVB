{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridClaimRewards.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useNotifications } from \"@usedapp/core\";\nimport { useClaimStakingRewards } from \"../../hooks/useClaimStakingRewards\"; // import { Token } from \"../Main\"\n\nimport { CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n      margin: 10,\n      overflowWrap: \"break-word\"\n    },\n    h3: {\n      margin: 5,\n      fontSize: 20,\n      overflow: \"hidden\"\n    },\n    span: {\n      fontSize: 20\n    }\n  };\n});\n_c = Item;\nexport const GridClaimRewards = _ref2 => {\n  _s();\n\n  let {\n    tokenAddress\n  } = _ref2;\n  const dAppTokenAddress = tokenAddress;\n  const {\n    account\n  } = useEthers();\n  const {\n    notifications\n  } = useNotifications();\n  const {\n    send: claimStakingRewards,\n    state: stateClaimStakingRewards\n  } = useClaimStakingRewards();\n\n  const handleClaimStakingRewards = () => {\n    return claimStakingRewards(tokenAddress);\n  };\n\n  const isClaiming = stateClaimStakingRewards.status === \"Mining\";\n  const [showClaimingSuccess, setClaimingSuccess] = useState(false);\n  useEffect(() => {\n    if (notifications.filter(notification => notification.type === \"transactionSucceed\" && notification.transactionName === \"Claiming Staking Rewards\").length > 0) {\n      console.log(\"Tokens Claimed!\");\n      setClaimingSuccess(true);\n    }\n  }, [notifications, stateClaimStakingRewards]);\n\n  const handleCloseSnack = () => {\n    setClaimingSuccess(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          marginTop: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              sx: {\n                backgroundColor: '#B9B8B8'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-unstake btn-shadow\",\n                  onClick: handleClaimStakingRewards,\n                  children: isClaiming ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 26\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 57\n                  }, this) : \"Claim Rewards!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showClaimingSuccess,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"Rewards Claimed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GridClaimRewards, \"jOEJ+7l610ubxGS/ryPA6GtnvCM=\", false, function () {\n  return [useEthers, useNotifications, useClaimStakingRewards];\n});\n\n_c2 = GridClaimRewards;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"GridClaimRewards\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridClaimRewards.tsx"],"names":["useEthers","useNotifications","useClaimStakingRewards","CircularProgress","Snackbar","Alert","styled","Box","Paper","Grid","Typography","useState","useEffect","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","h2","margin","overflowWrap","h3","fontSize","overflow","span","GridClaimRewards","tokenAddress","dAppTokenAddress","account","notifications","send","claimStakingRewards","state","stateClaimStakingRewards","handleClaimStakingRewards","isClaiming","status","showClaimingSuccess","setClaimingSuccess","filter","notification","type","transactionName","length","console","log","handleCloseSnack","flexGrow"],"mappings":"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","sourcesContent":["import { useEthers, useNotifications } from \"@usedapp/core\"\nimport { useStakingBalance } from \"../../hooks/useStakingBalance\"\nimport { useStakingRewards } from \"../../hooks/useStakingRewards\"\nimport { useClaimStakingRewards } from \"../../hooks/useClaimStakingRewards\"\n\n// import { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\"\n\nimport { Button, makeStyles, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\"\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { useState, useEffect } from \"react\"\nimport { Routes, Route } from \"react-router-dom\"\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n        margin: 10,\n        overflowWrap: \"break-word\",\n    },\n    h3: {\n        margin: 5,\n        fontSize: 20,\n        overflow: \"hidden\",\n    },\n    span: {\n        fontSize: 20\n    }\n}));\n\n\ninterface BalanceMsgProps {\n    tokenAddress: string\n    // eNumber: number\n}\n\n\nexport const GridClaimRewards = ({ tokenAddress }: BalanceMsgProps) => {\n\n    const dAppTokenAddress = tokenAddress\n    const { account } = useEthers()\n    const { notifications } = useNotifications()\n\n    const { send: claimStakingRewards, state: stateClaimStakingRewards } = useClaimStakingRewards()\n    const handleClaimStakingRewards = () => { return claimStakingRewards(tokenAddress) }\n\n    const isClaiming = stateClaimStakingRewards.status === \"Mining\"\n    const [showClaimingSuccess, setClaimingSuccess] = useState(false)\n\n    useEffect(() => {\n        if (notifications.filter((notification) =>\n            notification.type === \"transactionSucceed\" &&\n            notification.transactionName === \"Claiming Staking Rewards\"\n        ).length > 0) {\n            console.log(\"Tokens Claimed!\")\n            setClaimingSuccess(true)\n        }\n    }, [notifications, stateClaimStakingRewards])\n\n    const handleCloseSnack = () => {\n        setClaimingSuccess(false)\n    }\n\n    return (\n        <>\n            <Box >\n                <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2} marginTop={1}>\n                        <Grid item xs={12} md={12}>\n                            <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                <Typography variant=\"h6\">\n                                    <button className='btn-unstake btn-shadow' onClick={handleClaimStakingRewards}>\n                                        {(isClaiming) ? <CircularProgress size={26} /> : \"Claim Rewards!\"}\n                                    </button>\n                                </Typography>\n                            </Item>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n            <Snackbar open={showClaimingSuccess}\n                autoHideDuration={5000}\n                onClose={handleCloseSnack} >\n                <Alert onClose={handleCloseSnack} severity=\"success\" >\n                    Rewards Claimed!\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}