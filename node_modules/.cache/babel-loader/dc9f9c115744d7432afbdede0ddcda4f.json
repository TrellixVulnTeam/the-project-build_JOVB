{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridStakingUnstaking.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useTokenBalance, useNotifications } from \"@usedapp/core\";\nimport { useStakingBalance } from \"../../hooks/useStakingBalance\";\nimport { useStakingRewards } from \"../../hooks/useStakingRewards\";\n// import { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n      margin: 10,\n      overflowWrap: \"break-word\"\n    },\n    h3: {\n      margin: 5,\n      fontSize: 20,\n      overflow: \"hidden\"\n    },\n    span: {\n      fontSize: 20\n    }\n  };\n});\n_c = Item;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"inline-grid\",\n    gridTemplateColumns: \"auto auto auto\",\n    gap: theme.spacing(1),\n    alignItems: \"center\"\n  },\n  tokenImg: {\n    width: \"32px\"\n  },\n  amount: {\n    fontWeight: 700\n  },\n  bold: {\n    fontWeight: 900\n  }\n}));\nexport const GridStakingUnstaking = _ref2 => {\n  _s();\n\n  let {\n    tokenAddress\n  } = _ref2;\n  const dAppTokenAddress = tokenAddress;\n  const classes = useStyles();\n  const {\n    account\n  } = useEthers();\n  const {\n    notifications\n  } = useNotifications();\n  const unStakedTokenBalance = useTokenBalance(dAppTokenAddress, account);\n  const formattedUnStakedTokenBalance = unStakedTokenBalance ? parseFloat(formatUnits(unStakedTokenBalance, 18)) : 0;\n  const {\n    stakingBalance\n  } = useStakingBalance(tokenAddress);\n  const FstakedTokenBalance = stakingBalance ? parseFloat(formatUnits(stakingBalance, 18)) : 0;\n  const stakingRewards = useStakingRewards(tokenAddress);\n  const FstakingRewards = stakingRewards ? parseFloat(formatUnits(stakingRewards, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          marginTop: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              sx: {\n                backgroundColor: '#B9B8B8'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Token Account Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", formattedUnStakedTokenBalance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              sx: {\n                backgroundColor: '#B9B8B8'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Staked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: FstakedTokenBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              sx: {\n                backgroundColor: '#B9B8B8'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Rewards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: FstakingRewards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(GridStakingUnstaking, \"3DRVdOWpWejc84hGulM60rWB1iM=\", false, function () {\n  return [useStyles, useEthers, useNotifications, useTokenBalance, useStakingBalance, useStakingRewards];\n});\n\n_c2 = GridStakingUnstaking;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"GridStakingUnstaking\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/yourWallet/GridStakingUnstaking.tsx"],"names":["useEthers","useTokenBalance","useNotifications","useStakingBalance","useStakingRewards","formatUnits","makeStyles","styled","Box","Paper","Grid","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","h2","margin","overflowWrap","h3","fontSize","overflow","span","useStyles","container","display","gridTemplateColumns","gap","alignItems","tokenImg","width","amount","fontWeight","bold","GridStakingUnstaking","tokenAddress","dAppTokenAddress","classes","account","notifications","unStakedTokenBalance","formattedUnStakedTokenBalance","parseFloat","stakingBalance","FstakedTokenBalance","stakingRewards","FstakingRewards","flexGrow"],"mappings":"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","sourcesContent":["import { useEthers, useTokenBalance, useEtherBalance, useNotifications } from \"@usedapp/core\"\nimport { useStakingBalance } from \"../../hooks/useStakingBalance\"\nimport { useStakingRewards } from \"../../hooks/useStakingRewards\"\nimport { useClaimStakingRewards } from \"../../hooks/useClaimStakingRewards\"\n\n// import { Token } from \"../Main\"\nimport { formatUnits } from \"@ethersproject/units\"\n\nimport { Button, makeStyles, CircularProgress, Snackbar } from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from \"@mui/material\"\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { useState, useEffect } from \"react\"\nimport { Routes, Route } from \"react-router-dom\"\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    h2: {\n        margin: 10,\n        overflowWrap: \"break-word\",\n    },\n    h3: {\n        margin: 5,\n        fontSize: 20,\n        overflow: \"hidden\",\n    },\n    span: {\n        fontSize: 20\n    }\n}));\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: \"inline-grid\",\n        gridTemplateColumns: \"auto auto auto\",\n        gap: theme.spacing(1),\n        alignItems: \"center\",\n    },\n    tokenImg: {\n        width: \"32px\"\n    },\n    amount: {\n        fontWeight: 700\n    },\n    bold: {\n        fontWeight: 900,\n    }\n}))\n\n\ninterface BalanceMsgProps {\n    tokenAddress: string\n    // eNumber: number\n}\n\n\nexport const GridStakingUnstaking = ({ tokenAddress }: BalanceMsgProps) => {\n\n    const dAppTokenAddress = tokenAddress\n    const classes = useStyles()\n    const { account } = useEthers()\n    const { notifications } = useNotifications()\n\n\n    const unStakedTokenBalance = useTokenBalance(dAppTokenAddress, account)\n    const formattedUnStakedTokenBalance: number = unStakedTokenBalance ? parseFloat(formatUnits(unStakedTokenBalance, 18)) : 0\n\n    const { stakingBalance } = useStakingBalance(tokenAddress)\n    const FstakedTokenBalance: number = stakingBalance ? parseFloat(formatUnits(stakingBalance, 18)) : 0\n\n    const stakingRewards = useStakingRewards(tokenAddress)\n    const FstakingRewards: number = stakingRewards ? parseFloat(formatUnits(stakingRewards, 18)) : 0\n\n\n    return (\n        <>\n            <Box >\n                <Box sx={{ flexGrow: 1 }}>\n                    <Grid container spacing={2} marginTop={1}>\n                        <Grid item xs={12} md={12}>\n                            <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                <h2>Token Account Balance</h2>\n                            </Item>\n                            <Item>\n                                <h3> {formattedUnStakedTokenBalance}</h3>\n                            </Item>\n                        </Grid>\n                        <Grid item xs={6} md={6}>\n                            <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                <h2>Staked</h2>\n                            </Item>\n                            <Item>\n                                <h3>{FstakedTokenBalance}</h3>\n                            </Item>\n                        </Grid>\n\n                        <Grid item xs={6} md={6}>\n                            <Item sx={{ backgroundColor: '#B9B8B8' }}>\n                                <h2>Rewards</h2>\n                            </Item>\n                            <Item>\n                                <h3>{FstakingRewards}</h3>\n                            </Item>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}