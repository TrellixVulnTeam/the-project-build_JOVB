{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/Project.tsx\",\n    _s = $RefreshSig$();\n\n// import React from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { CheckpointsEachPreSale } from \"./CheckpointsEachPreSale\";\nimport { GridEachPreSalePurchasedBalance } from \"./GridBoxes/GridEachPreSalePurchasedBalance\";\nimport { Box } from \"@mui/material\";\nimport { useEthers, useTokenBalance, useEtherBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport React from \"react\";\nimport { ParticipateButton } from \"./project/ParticipateButton\";\nimport { ParticipateTab } from \"./project/ParticipateTab\";\nimport { useGetValues } from '../hooks/useGetValues';\nimport { AllocatedAmountToParticipate } from \"./project/AllocatedAmountToParticipate\";\nimport { useGetStakingLevel } from \"../hooks/useGetStakingLevel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Project = _ref => {\n  _s();\n\n  let {\n    supportedTokens\n  } = _ref;\n  // const { formattedDappTokenBalance } = useContext(MyContext)\n  let params = useParams();\n  const {\n    account\n  } = useEthers();\n  const connectedToMetaMask = account !== undefined;\n  const preSaleNumber = params.id ? params.id : '';\n  const busdTokenAddress = '0x4Fabb145d64652a948d72533023f6E7A623C7C53';\n  const busdTokenBalance = useTokenBalance(busdTokenAddress, account);\n  const formattedBusdTokenBalance = busdTokenBalance ? parseFloat(formatUnits(busdTokenBalance, 18)) : 0;\n  const ethBalance = useEtherBalance(account);\n  const formattedEthBalance = ethBalance ? parseFloat(formatUnits(ethBalance, 18)) : 0;\n  const dappTokenAddress = supportedTokens[0].address;\n  console.log(\"This is in Project: \" + account + \" \" + formattedEthBalance);\n  const {\n    participateInPreSaleAllocationStatus,\n    preSaleAllocationStatus,\n    preSaleFundEachPreSaleNumberStatus,\n    preSaleFundFCFSEachPreSaleNumberStatus,\n    preSaleFundEachPreSaleNumberWithoutStakingStatus,\n    claimTokensEachPreSaleStatus\n  } = useGetValues(dappTokenAddress, preSaleNumber);\n  console.log(\"this is participateInPreSaleAllocationStatus, preSaleAllocationStatus, preSaleFundEachPreSaleNumberStatus, preSaleFundFCFSEachPreSaleNumberStatus, preSaleFundEachPreSaleNumberWithoutStakingStatus, claimTokensEachPreSaleStatus: \" + participateInPreSaleAllocationStatus + preSaleAllocationStatus + preSaleFundEachPreSaleNumberStatus + preSaleFundFCFSEachPreSaleNumberStatus + preSaleFundEachPreSaleNumberWithoutStakingStatus + claimTokensEachPreSaleStatus);\n  const {\n    getStakingLevel\n  } = useGetStakingLevel();\n  const fStakingLevel = getStakingLevel ? parseFloat(getStakingLevel) : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GridEachPreSalePurchasedBalance, {\n        preSaleNumber: preSaleNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: claimTokensEachPreSaleStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"section-heading\",\n          children: \"Pre-Sale! Has Now Been Finished!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"section-heading\",\n            children: \"Pre-Sale! is Now Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(CheckpointsEachPreSale, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"section-heading\",\n          children: \" Participate...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connectedToMetaMask && formattedEthBalance > 0 && formattedBusdTokenBalance == 0 && getStakingLevel > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [participateInPreSaleAllocationStatus ? /*#__PURE__*/_jsxDEV(ParticipateButton, {\n              preSaleNumber: preSaleNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 81\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), preSaleAllocationStatus ? /*#__PURE__*/_jsxDEV(AllocatedAmountToParticipate, {\n              supportedTokens: supportedTokens,\n              preSaleNumber: preSaleNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 68\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), preSaleFundEachPreSaleNumberStatus || preSaleFundFCFSEachPreSaleNumberStatus || preSaleFundEachPreSaleNumberWithoutStakingStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [preSaleFundEachPreSaleNumberStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-note\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Phase: 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"You can purchase Pre-Sale Tokens according to the $BUSD Limit Allocated to You.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), preSaleFundFCFSEachPreSaleNumberStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-note\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Phase: 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"First Come First Serve\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"There is no $BUSD Limit.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"If tokens have been left in the phase-2. \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"In this round, You can buy as many tokens as you want up until the total pre-sale target met.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(ParticipateTab, {\n                supportedTokens: supportedTokens,\n                preSaleNumber: preSaleNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), claimTokensEachPreSaleStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Tokens are now Available to claim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 75\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n            className: \"participationDirection\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Once met the checkpoints pre-sale will display here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Project, \"UMQjOJQwWTRnAs2amAKceim7rM0=\", false, function () {\n  return [useParams, useEthers, useTokenBalance, useEtherBalance, useGetValues, useGetStakingLevel];\n});\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/Project.tsx"],"names":["useParams","CheckpointsEachPreSale","GridEachPreSalePurchasedBalance","Box","useEthers","useTokenBalance","useEtherBalance","formatUnits","React","ParticipateButton","ParticipateTab","useGetValues","AllocatedAmountToParticipate","useGetStakingLevel","Project","supportedTokens","params","account","connectedToMetaMask","undefined","preSaleNumber","id","busdTokenAddress","busdTokenBalance","formattedBusdTokenBalance","parseFloat","ethBalance","formattedEthBalance","dappTokenAddress","address","console","log","participateInPreSaleAllocationStatus","preSaleAllocationStatus","preSaleFundEachPreSaleNumberStatus","preSaleFundFCFSEachPreSaleNumberStatus","preSaleFundEachPreSaleNumberWithoutStakingStatus","claimTokensEachPreSaleStatus","getStakingLevel","fStakingLevel"],"mappings":"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","sourcesContent":["// import React from 'react'\nimport { Token } from \"./Main\"\nimport { useParams } from \"react-router-dom\"\nimport { CheckpointsEachPreSale } from \"./CheckpointsEachPreSale\"\nimport { GridEachPreSalePurchasedBalance } from \"./GridBoxes/GridEachPreSalePurchasedBalance\"\nimport { Box } from \"@mui/material\"\nimport { Tab, Typography } from \"@material-ui/core\"\nimport { useEthers, useTokenBalance, useEtherBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport React, { useState, createContext, useContext } from \"react\"\nimport { ParticipateButton } from \"./project/ParticipateButton\"\nimport { ParticipateTab } from \"./project/ParticipateTab\"\nimport { useGetValues } from '../hooks/useGetValues'\nimport { AllocatedAmountToParticipate } from \"./project/AllocatedAmountToParticipate\"\nimport { MyContext } from \"./Header2\"\nimport { useGetStakingLevel } from \"../hooks/useGetStakingLevel\";\n\ninterface YourWalletProps {\n    supportedTokens: Array<Token>\n}\n\n\nexport const Project = ({ supportedTokens }: YourWalletProps) => {\n    // const { formattedDappTokenBalance } = useContext(MyContext)\n    let params = useParams()\n    const { account } = useEthers()\n    const connectedToMetaMask = account !== undefined\n\n\n    const preSaleNumber = params.id ? params.id : ''\n\n    const busdTokenAddress = '0x4Fabb145d64652a948d72533023f6E7A623C7C53'\n\n    const busdTokenBalance = useTokenBalance(busdTokenAddress, account)\n    const formattedBusdTokenBalance: number = busdTokenBalance ? parseFloat(formatUnits(busdTokenBalance, 18)) : 0\n\n    const ethBalance = useEtherBalance(account)\n    const formattedEthBalance: number = ethBalance ? parseFloat(formatUnits(ethBalance, 18)) : 0\n\n    const dappTokenAddress = supportedTokens[0].address\n    console.log(\"This is in Project: \" + account + \" \" + formattedEthBalance)\n    const { participateInPreSaleAllocationStatus, preSaleAllocationStatus, preSaleFundEachPreSaleNumberStatus, preSaleFundFCFSEachPreSaleNumberStatus, preSaleFundEachPreSaleNumberWithoutStakingStatus, claimTokensEachPreSaleStatus } = useGetValues(dappTokenAddress, preSaleNumber)\n\n    console.log(\"this is participateInPreSaleAllocationStatus, preSaleAllocationStatus, preSaleFundEachPreSaleNumberStatus, preSaleFundFCFSEachPreSaleNumberStatus, preSaleFundEachPreSaleNumberWithoutStakingStatus, claimTokensEachPreSaleStatus: \" + participateInPreSaleAllocationStatus + preSaleAllocationStatus + preSaleFundEachPreSaleNumberStatus + preSaleFundFCFSEachPreSaleNumberStatus + preSaleFundEachPreSaleNumberWithoutStakingStatus + claimTokensEachPreSaleStatus)\n\n    const { getStakingLevel } = useGetStakingLevel()\n    const fStakingLevel: number = getStakingLevel ? parseFloat(getStakingLevel) : 0\n\n    return (\n        <>\n            {/* <div>\n                <h1 className=\"section-heading\">Pre-Sale! is Now Open</h1>\n            </div> */}\n            <div>\n                <GridEachPreSalePurchasedBalance preSaleNumber={preSaleNumber} />\n                {/* <CheckpointsPreSale /> */}\n                {/* <h1 className=\"section-heading\"> Participate...</h1> */}\n            </div>\n            <div>\n                {claimTokensEachPreSaleStatus ?\n                    (\n                        <>\n                            <h1 className=\"section-heading\">Pre-Sale! Has Now Been Finished!</h1>\n\n                            {/* <GridEachPreSalePurchasedBalance preSaleNumber={preSaleNumber} /> */}\n                        </>) : (\n                        <>\n                            <div>\n                                <h1 className=\"section-heading\">Pre-Sale! is Now Open</h1>\n                            </div>\n                            <CheckpointsEachPreSale />\n                            <h1 className=\"section-heading\"> Participate...</h1>\n                            <div>\n                                {(connectedToMetaMask && (formattedEthBalance > 0)\n                                    && (formattedBusdTokenBalance == 0) && (getStakingLevel > 0)) ? (\n                                    <>\n                                        {participateInPreSaleAllocationStatus ? <ParticipateButton preSaleNumber={preSaleNumber} /> : <></>}\n\n                                        {preSaleAllocationStatus ? <AllocatedAmountToParticipate supportedTokens={supportedTokens} preSaleNumber={preSaleNumber} /> : <></>}\n\n                                        {(preSaleFundEachPreSaleNumberStatus ||\n                                            preSaleFundFCFSEachPreSaleNumberStatus ||\n                                            preSaleFundEachPreSaleNumberWithoutStakingStatus) ?\n                                            (\n                                                <>\n                                                    {preSaleFundEachPreSaleNumberStatus ? (<>\n                                                        <div className=\"info-note\">\n                                                            <h1>Phase: 2</h1>\n                                                            <h3>You can purchase Pre-Sale Tokens according to the $BUSD Limit Allocated to You.</h3>\n                                                        </div>\n\n                                                    </>) : (<></>)}\n                                                    {preSaleFundFCFSEachPreSaleNumberStatus ? (<>\n                                                        <div className=\"info-note\">\n                                                            <h1>Phase: 3</h1>\n                                                            <h2>First Come First Serve</h2>\n                                                            <h4>There is no $BUSD Limit.</h4>\n                                                            <h4>If tokens have been left in the phase-2. </h4>\n                                                            <h4>In this round, You can buy as many tokens as you want up until the total pre-sale target met.</h4>\n                                                        </div>\n\n                                                    </>) : (<></>)}\n                                                    <ParticipateTab supportedTokens={supportedTokens} preSaleNumber={preSaleNumber} />\n                                                </>\n                                            ) : <></>}\n\n                                        {claimTokensEachPreSaleStatus ? <><h1>Tokens are now Available to claim</h1></> : <></>}\n                                    </>\n\n                                ) : (\n                                    <Box className=\"participationDirection\" alignItems=\"center\"\n                                        justifyContent=\"center\"\n                                        display=\"flex\" >\n                                        <div>\n                                            <h3>Once met the checkpoints pre-sale will display here...</h3>\n                                        </div>\n\n                                    </Box>)\n                                }\n                            </div>\n                        </>)}\n\n            </div>\n\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}