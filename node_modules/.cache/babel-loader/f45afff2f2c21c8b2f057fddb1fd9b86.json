{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractCall, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\";\nimport { utils } from \"ethers\";\nimport { useContext } from \"react\"; // import { MyContext } from \"../App\";\n\nimport { MyContext } from \"../components/Header2\";\nexport const usePurchasedBalanceEachPreSale = (address, preSaleNumber) => {\n  _s();\n\n  var _useContractCall, _useContractCall2;\n\n  const data = useContext(MyContext);\n  const {\n    chainIdentity,\n    tokenFarmContractAddress\n  } = data;\n  console.log(\"You are in usePurchasedBalance Context: chainIdentity \" + chainIdentity + \" tokenFarmL \" + tokenFarmContractAddress);\n  const {\n    account,\n    chainId\n  } = useEthers();\n  console.log(chainId);\n  console.log(\"usePurchasedBalance: chainId\" + chainId);\n  const {\n    abi\n  } = TokenForm; // const tokenFarmContractAddress1 = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n\n  const tokenFarmInterface = new utils.Interface(abi);\n  const [totalPurchasedPreSaleTokensEachPreSale] = (_useContractCall = useContractCall({\n    abi: tokenFarmInterface,\n    address: tokenFarmContractAddress,\n    method: \"totalPurchasedPreSaleTokensEachPreSale\",\n    args: [preSaleNumber, account]\n  })) !== null && _useContractCall !== void 0 ? _useContractCall : [];\n  const [purchasedBalanceEachPreSale] = (_useContractCall2 = useContractCall({\n    abi: tokenFarmInterface,\n    address: tokenFarmContractAddress,\n    method: \"purchasedBalanceEachPreSale\",\n    args: [preSaleNumber, account]\n  })) !== null && _useContractCall2 !== void 0 ? _useContractCall2 : [];\n  return {\n    totalPurchasedPreSaleTokensEachPreSale,\n    purchasedBalanceEachPreSale\n  };\n};\n\n_s(usePurchasedBalanceEachPreSale, \"0JXV7ejEFjpoDfnB82qFp17Kh4c=\", false, function () {\n  return [useEthers, useContractCall, useContractCall];\n});","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/hooks/usePurchasedBalanceEachPreSale.tsx"],"names":["useContractCall","useEthers","TokenForm","utils","useContext","MyContext","usePurchasedBalanceEachPreSale","address","preSaleNumber","data","chainIdentity","tokenFarmContractAddress","console","log","account","chainId","abi","tokenFarmInterface","Interface","totalPurchasedPreSaleTokensEachPreSale","method","args","purchasedBalanceEachPreSale"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,SAA1B,QAA2C,eAA3C;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,KAAT,QAA4C,QAA5C;AAEA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAGA,OAAO,MAAMC,8BAA8B,GAAG,CAACC,OAAD,EAAkBC,aAAlB,KAA4C;AAAA;;AAAA;;AAEtF,QAAMC,IAAI,GAAGL,UAAU,CAACC,SAAD,CAAvB;AACA,QAAM;AAAEK,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA8CF,IAApD;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,2DAA2DH,aAA3D,GAA2E,cAA3E,GAA4FC,wBAAxG;AAKA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBd,SAAS,EAAtC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCE,OAA7C;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAUd,SAAhB,CAdsF,CAetF;;AACA,QAAMe,kBAAkB,GAAG,IAAId,KAAK,CAACe,SAAV,CAAoBF,GAApB,CAA3B;AAGA,QAAM,CAACG,sCAAD,wBAA2CnB,eAAe,CAAC;AAC7DgB,IAAAA,GAAG,EAAEC,kBADwD;AAE7DV,IAAAA,OAAO,EAAEI,wBAFoD;AAG7DS,IAAAA,MAAM,EAAE,wCAHqD;AAI7DC,IAAAA,IAAI,EAAE,CAACb,aAAD,EAAgBM,OAAhB;AAJuD,GAAD,CAA1D,+DAKA,EALN;AAOA,QAAM,CAACQ,2BAAD,yBAAgCtB,eAAe,CAAC;AAClDgB,IAAAA,GAAG,EAAEC,kBAD6C;AAElDV,IAAAA,OAAO,EAAEI,wBAFyC;AAGlDS,IAAAA,MAAM,EAAE,6BAH0C;AAIlDC,IAAAA,IAAI,EAAE,CAACb,aAAD,EAAgBM,OAAhB;AAJ4C,GAAD,CAA/C,iEAKA,EALN;AAOA,SAAO;AAAEK,IAAAA,sCAAF;AAA0CG,IAAAA;AAA1C,GAAP;AACH,CAlCM;;GAAMhB,8B;UAUoBL,S,EASoBD,e,EAOXA,e","sourcesContent":["import { useContractCall, useEthers } from \"@usedapp/core\";\nimport TokenForm from \"../chain-info/contracts/TokenFarm.json\"\nimport { utils, BigNumber, constants } from \"ethers\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { useContext } from \"react\";\n// import { MyContext } from \"../App\";\nimport { MyContext } from \"../components/Header2\";\n\n\nexport const usePurchasedBalanceEachPreSale = (address: string, preSaleNumber: string) => {\n\n    const data = useContext(MyContext)\n    const { chainIdentity, tokenFarmContractAddress } = data\n\n    console.log(\"You are in usePurchasedBalance Context: chainIdentity \" + chainIdentity + \" tokenFarmL \" + tokenFarmContractAddress)\n\n\n\n\n    const { account, chainId } = useEthers()\n    console.log(chainId)\n    console.log(\"usePurchasedBalance: chainId\" + chainId)\n\n    const { abi } = TokenForm\n    // const tokenFarmContractAddress1 = (chainId ? ((String(chainId) == '42') ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero) : constants.AddressZero)\n    const tokenFarmInterface = new utils.Interface(abi)\n\n\n    const [totalPurchasedPreSaleTokensEachPreSale] = useContractCall({\n        abi: tokenFarmInterface,\n        address: tokenFarmContractAddress,\n        method: \"totalPurchasedPreSaleTokensEachPreSale\",\n        args: [preSaleNumber, account]\n    }) ?? []\n\n    const [purchasedBalanceEachPreSale] = useContractCall({\n        abi: tokenFarmInterface,\n        address: tokenFarmContractAddress,\n        method: \"purchasedBalanceEachPreSale\",\n        args: [preSaleNumber, account]\n    }) ?? []\n\n    return { totalPurchasedPreSaleTokensEachPreSale, purchasedBalanceEachPreSale }\n}"]},"metadata":{},"sourceType":"module"}