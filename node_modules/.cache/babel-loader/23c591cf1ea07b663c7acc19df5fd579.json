{"ast":null,"code":"var _jsxFileName = \"/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/CheckpointsEachPreSale.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { makeStyles } from \"@material-ui/core\";\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport { ProgressBar } from \"./ProgressBar\";\nimport { useEthers, useTokenBalance, useEtherBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { useEffect, useState } from \"react\";\nimport { useGetStakingLevel } from \"../hooks/useGetStakingLevel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    // display: \"inline-grid\",\n    // gridTemplateColumns: \"auto auto auto\",\n    // gap: theme.spacing(1),\n    alignItems: \"stretch\"\n  },\n  tokenImg: {\n    width: \"32px\"\n  },\n  amount: {\n    fontWeight: 700\n  },\n  bold: {\n    fontWeight: 900\n  }\n}));\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    alignItems: 'stretch',\n    margin: 0,\n    // borderRadius: 20,\n    // justifyContent: 'left',\n    // display: \"flex\",\n    color: theme.palette.text.secondary,\n    h2: {\n      margin: 10\n    },\n    h3: {\n      margin: 10,\n      fontSize: 15\n    },\n    span: {\n      fontSize: 20\n    }\n  };\n});\n_c = Item;\nconst Item2 = styled(Paper)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return { // backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    backgroundColor: 'rgba(52, 52, 52, 0.8)',\n    paddingTop: theme.spacing(1),\n    textAlign: 'center',\n    opacity: '.5',\n    justifyContent: 'center',\n    display: 'flex' // color: theme.palette.text.secondary,\n\n  };\n});\nexport const CheckpointsEachPreSale = () => {\n  _s();\n\n  console.log(\"CheckpointsPreSale\");\n  const classes = useStyles(); // console.log(connectedToMetaMask)\n\n  const {\n    account\n  } = useEthers();\n  const connectedToMetaMask = account !== undefined;\n  const busdTokenAddress = '0x84b9B910527Ad5C03A9Ca831909E21e236EA7b06';\n  const busdTokenBalance = useTokenBalance(busdTokenAddress, account);\n  const formattedBusdTokenBalance = busdTokenBalance ? parseFloat(formatUnits(busdTokenBalance, 18)) : 0;\n  const busdAvailable = formattedBusdTokenBalance > 0 ? true : false;\n  const ethBalance = useEtherBalance(account);\n  const formattedEthBalance = ethBalance ? parseFloat(formatUnits(ethBalance, 18)) : 0;\n  const ethAvailable = formattedEthBalance > 0 ? true : false;\n  const [checkpoints, setCheckpoints] = useState(false);\n  const {\n    getStakingLevel\n  } = useGetStakingLevel();\n  const fStakingLevel = getStakingLevel ? parseFloat(getStakingLevel) : 0;\n  useEffect(() => {\n    if (connectedToMetaMask && ethAvailable) {\n      setCheckpoints(true);\n    }\n  }, [connectedToMetaMask, ethAvailable, busdAvailable]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkpointsHead\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Checkpoints...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"The following conditions must be met to proceed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"checkpointsGridItem\",\n        xs: 12,\n        md: 6,\n        sx: {\n          display: {\n            xs: 'block',\n            sm: 'block'\n          }\n        },\n        children: connectedToMetaMask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wallet Connected!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"If not connected, click the \\\"Connect Wallet\\\" button in the top right corner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Please connect with MetaMask!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Click the \\\"Connect Wallet\\\" button in the top right corner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"checkpointsGridItem\",\n        xs: 12,\n        md: 6,\n        sx: {\n          display: {\n            xs: 'block',\n            sm: 'block'\n          }\n        },\n        children: formattedEthBalance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"BNB Available!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your Bnb Balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formattedEthBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Require BNB Tokens!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"BNB Balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formattedEthBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"checkpointsGridItem\",\n        xs: 12,\n        md: 6,\n        children: formattedBusdTokenBalance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" BUSD Available!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your BUSD Balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formattedBusdTokenBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Require BUSD Tokens!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your BUSD Balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formattedBusdTokenBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"checkpointsGridItem\",\n        xs: 12,\n        md: 6,\n        children: fStakingLevel ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Staking Level!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your Staking Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: fStakingLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            sx: {\n              backgroundColor: '#B9B8B8',\n              fontWeight: '900'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Require Staking Level!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your Staking Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: fStakingLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        checkpoints: checkpoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckpointsEachPreSale, \"vQ6oz7LbbNP25JWHQxZEKkZU86M=\", false, function () {\n  return [useStyles, useEthers, useTokenBalance, useEtherBalance, useGetStakingLevel];\n});\n\n_c2 = CheckpointsEachPreSale;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"CheckpointsEachPreSale\");","map":{"version":3,"sources":["/Users/harmanpreetsingh/demos/the-bulls-pad-front-end/front_end5/src/components/CheckpointsEachPreSale.tsx"],"names":["Box","Grid","styled","Paper","makeStyles","CheckBoxIcon","CheckBoxOutlineBlankIcon","ProgressBar","useEthers","useTokenBalance","useEtherBalance","formatUnits","useEffect","useState","useGetStakingLevel","useStyles","theme","container","alignItems","tokenImg","width","amount","fontWeight","bold","Item","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","margin","color","text","secondary","h2","h3","fontSize","span","Item2","paddingTop","opacity","justifyContent","display","CheckpointsEachPreSale","console","log","classes","account","connectedToMetaMask","undefined","busdTokenAddress","busdTokenBalance","formattedBusdTokenBalance","parseFloat","busdAvailable","ethBalance","formattedEthBalance","ethAvailable","checkpoints","setCheckpoints","getStakingLevel","fStakingLevel","flexGrow","xs","sm","marginTop"],"mappings":"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","sourcesContent":["import { Box, Grid, Typography, Checkbox } from \"@mui/material\"\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { makeStyles } from \"@material-ui/core\"\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport Avatar from '@mui/material/Avatar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport PriceCheckIcon from '@mui/icons-material/PriceCheck';\nimport LocalPoliceIcon from '@mui/icons-material/LocalPolice';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { deepOrange, green } from '@mui/material/colors';\nimport { ProgressBar } from \"./ProgressBar\";\nimport { useEthers, useTokenBalance, useEtherBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { useEffect, useState } from \"react\";\nimport { useGetStakingLevel } from \"../hooks/useGetStakingLevel\";\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        // display: \"inline-grid\",\n        // gridTemplateColumns: \"auto auto auto\",\n        // gap: theme.spacing(1),\n        alignItems: \"stretch\",\n    },\n    tokenImg: {\n        width: \"32px\"\n    },\n    amount: {\n        fontWeight: 700\n    },\n    bold: {\n        fontWeight: 900,\n    },\n\n}))\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    alignItems: 'stretch',\n    margin: 0,\n    // borderRadius: 20,\n    // justifyContent: 'left',\n    // display: \"flex\",\n    color: theme.palette.text.secondary,\n    h2: {\n        margin: 10,\n    },\n    h3: {\n        margin: 10,\n        fontSize: 15,\n    },\n    span: {\n        fontSize: 20\n    }\n}));\n\nconst Item2 = styled(Paper)(({ theme }) => ({\n    // backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    backgroundColor: 'rgba(52, 52, 52, 0.8)',\n    paddingTop: theme.spacing(1),\n    textAlign: 'center',\n    opacity: '.5',\n    justifyContent: 'center',\n    display: 'flex',\n    // color: theme.palette.text.secondary,\n}));\n\ninterface CheckpointProps {\n    connectedToMetaMask: boolean\n    ethBalance: number\n    busdBalance: number\n}\n\nexport const CheckpointsEachPreSale = () => {\n    console.log(\"CheckpointsPreSale\")\n    const classes = useStyles()\n    // console.log(connectedToMetaMask)\n    const { account } = useEthers()\n\n    const connectedToMetaMask = account !== undefined\n\n    const busdTokenAddress = '0x84b9B910527Ad5C03A9Ca831909E21e236EA7b06'\n\n    const busdTokenBalance = useTokenBalance(busdTokenAddress, account)\n    const formattedBusdTokenBalance: number = busdTokenBalance ? parseFloat(formatUnits(busdTokenBalance, 18)) : 0\n    const busdAvailable = (formattedBusdTokenBalance > 0) ? true : false\n\n    const ethBalance = useEtherBalance(account)\n    const formattedEthBalance: number = ethBalance ? parseFloat(formatUnits(ethBalance, 18)) : 0\n\n    const ethAvailable = (formattedEthBalance > 0) ? true : false\n    const [checkpoints, setCheckpoints] = useState(false)\n\n    const { getStakingLevel } = useGetStakingLevel()\n    const fStakingLevel: number = getStakingLevel ? parseFloat(getStakingLevel) : 0\n\n    useEffect(() => {\n        if (connectedToMetaMask && ethAvailable) {\n            setCheckpoints(true)\n        }\n    }, [connectedToMetaMask, ethAvailable, busdAvailable])\n\n    return (\n        <>\n            <Box sx={{ flexGrow: 1 }}>\n                {/* <Grid\n                    container\n                    direction=\"column\"\n                    // justifyContent=\"center\"\n                    alignItems=\"center\"\n\n                > */}\n\n                <div className=\"checkpointsHead\"\n                >\n                    <div>\n                        <h1>Checkpoints...</h1>\n\n                        <h3>The following conditions must be met to proceed:</h3>\n\n                    </div>\n                </div>\n                {/* </Box></Grid> */}\n            </Box>\n\n            <Grid container spacing={2}\n                justifyContent=\"center\"\n                alignItems='stretch'\n            >\n                <Grid item className=\"checkpointsGridItem\" xs={12} md={6}\n                    sx={{ display: { xs: 'block', sm: 'block' }, }}\n                >\n\n                    {connectedToMetaMask ? (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n\n                                <h2>Wallet Connected!</h2>\n                                <CheckBoxIcon color=\"success\" />\n                            </Item>\n                            <Item >\n                                <h3>\n                                    If not connected, click the \"Connect Wallet\" button in the top right corner\n                                </h3>\n                            </Item>\n                        </>\n                    ) : (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n                                <h2>Please connect with MetaMask!</h2>\n                                <CheckBoxOutlineBlankIcon />\n                            </Item>\n                            <Item >\n\n                                <h3>\n                                    Click the \"Connect Wallet\" button in the top right corner\n                                </h3>\n                            </Item>\n                        </>)}\n                </Grid>\n                <Grid item className=\"checkpointsGridItem\" xs={12} md={6}\n                    sx={{ display: { xs: 'block', sm: 'block' }, }}\n                >\n                    {formattedEthBalance ? (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n\n                                <h2>BNB Available!</h2>\n                                <CheckBoxIcon color=\"success\" />\n\n                            </Item>\n                            <Item >\n\n                                <h3>Your Bnb Balance: <span>{formattedEthBalance}</span></h3>\n                            </Item>\n                        </>\n                    ) : (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n\n                                <h2>Require BNB Tokens!</h2>\n                                <CheckBoxOutlineBlankIcon />\n                            </Item>\n                            <Item >\n                                <h3>BNB Balance: <span>{formattedEthBalance}</span></h3>\n                            </Item>\n                        </>)}\n                </Grid>\n                <Grid item className=\"checkpointsGridItem\" xs={12} md={6}>\n                    {formattedBusdTokenBalance ? (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n                                <h2> BUSD Available!</h2>\n                                <CheckBoxIcon color=\"success\" />\n\n                            </Item>\n                            <Item >\n                                <h3>Your BUSD Balance: <span>{formattedBusdTokenBalance}</span></h3>\n                            </Item>\n                        </>\n                    ) : (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n\n                                <h2> Require BUSD Tokens!</h2>\n                                <CheckBoxOutlineBlankIcon />\n                            </Item>\n                            <Item >\n\n                                <h3>Your BUSD Balance: <span>{formattedBusdTokenBalance}</span></h3>\n\n                            </Item>\n                        </>)}\n                </Grid>\n                <Grid item className=\"checkpointsGridItem\" xs={12} md={6}>\n                    {fStakingLevel ? (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n                                <h2> Staking Level!</h2>\n                                <CheckBoxIcon color=\"success\" />\n\n                            </Item>\n                            <Item >\n                                <h3>Your Staking Level: <span>{fStakingLevel}</span></h3>\n                            </Item>\n                        </>\n                    ) : (\n                        <>\n                            <Item sx={{ backgroundColor: '#B9B8B8', fontWeight: '900' }}>\n\n                                <h2> Require Staking Level!</h2>\n                                <CheckBoxOutlineBlankIcon />\n                            </Item>\n                            <Item >\n\n                                <h3>Your Staking Level: <span>{fStakingLevel}</span></h3>\n\n                            </Item>\n                        </>)}\n                </Grid>\n            </Grid>\n\n            <Box sx={{ flexGrow: 1, marginTop: 2 }}>\n                <ProgressBar checkpoints={checkpoints} />\n            </Box>\n        </>)\n}"]},"metadata":{},"sourceType":"module"}